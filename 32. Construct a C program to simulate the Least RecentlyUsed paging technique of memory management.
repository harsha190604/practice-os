#include <stdio.h>
#include <stdlib.h>

#define MAX_FRAMES 3


void printFrames(int frames[], int n) {
    for (int i = 0; i < n; i++) {
        if (frames[i] == -1) {
            printf(" - ");
        } else {
            printf(" %d ", frames[i]);
        }
    }
    printf("\n");
}


void LRU(int referenceString[], int n, int frames[], int frameCount) {
    int pageFaults = 0;

    for (int i = 0; i < frameCount; i++) {
        frames[i] = -1;
    }


    for (int i = 0; i < n; i++) {
        int page = referenceString[i];
        int pageFound = 0;

    
        for (int j = 0; j < frameCount; j++) {
            if (frames[j] == page) {
                pageFound = 1;
                break;
            }
        }

    
        if (!pageFound) {
           
            int lruIndex = 0;
            int minRecency = i;
            for (int j = 0; j < frameCount; j++) {
                int recency = -1;
                for (int k = i - 1; k >= 0; k--) {
                    if (referenceString[k] == frames[j]) {
                        recency = k;
                        break;
                    }
                }
                if (recency == -1) {
                    lruIndex = j;
                    break;
                }

                if (recency < minRecency) {
                    minRecency = recency;
                    lruIndex = j;
                }
            }

            frames[lruIndex] = page;
            pageFaults++;
        }
        printf("Page %d -> ", page);
        printFrames(frames, frameCount);
    }

    printf("\nTotal Page Faults: %d\n", pageFaults);
}

int main() {
    int referenceString[] = {7, 0, 1, 2, 0, 3, 0, 4, 2, 3, 0, 3, 2};
    int n = sizeof(referenceString) / sizeof(referenceString[0]);
    int frames[MAX_FRAMES];

    printf("Reference String: ");
    for (int i = 0; i < n; i++) {
        printf("%d ", referenceString[i]);
    }
    printf("\n\n");

    printf("Page Replacement Order:\n");
    LRU(referenceString, n, frames, MAX_FRAMES);

    return 0;
}
